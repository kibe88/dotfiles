# Add `~/bin` to the `$PATH`
PATH=$HOME/.bin:$PATH
PATH=$HOME/bin:$PATH

# Brewed path
PATH=/usr/local/bin:/usr/local/sbin:$PATH

# Brewed Python Path
PATH=/usr/local/lib/python2.7/site-packages:$PATH

# Brewed Ruby path
PATH=/usr/local/opt/ruby/bin:$PATH

# Brewed npm
PATH=/usr/local/share/npm/bin:$PATH

# export npm packages installed in home dir to PATH
LOCAL_NPM_PACKAGES="${HOME}/.local/share/npm"
export PATH="$PATH:$LOCAL_NPM_PACKAGES/bin"

# include the above packages man files
# Preserve MANPATH if you already defined it somewhere in your config.
# Otherwise, fall back to `manpath` so we can inherit from `/etc/manpath`.
export MANPATH="${MANPATH-$(manpath)}:$NPM_PACKAGES/share/man"

# rbenv installation
PATH="$HOME/.rbenv/bin:$PATH"
if commandExists rbenv; then
  eval "$(rbenv init -)"
  PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"
fi

# virtualenv installation
if commandExists brew; then
  if [[ -r $(brew --prefix)/bin/virtualenvwrapper.sh ]]; then
      source $(brew --prefix)/bin/virtualenvwrapper.sh
  fi

  export VIRTUALENVWRAPPER_VIRTUALENV=$(brew --prefix)/bin/virtualenv

  # Enable virtualenvwrapper
  export WORKON_HOME=$HOME/.virtualenvs
  export PIP_RESPECT_VIRTUALENV=true
  export PIP_VIRTUALENV_BASE=$WORKON_HOME

  export VIRTUALENVWRAPPER_PYTHON=$(brew --prefix)/bin/python
fi

# ruby gems
PATH="/usr/local/lib/ruby/gems/2.6.0/bin:${PATH}"

PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
